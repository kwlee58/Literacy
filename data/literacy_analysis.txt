## 코딩한 자료를 R로 입력
R > literacy.data<-read.table("literacy_140922.txt",header=FALSE,sep="")
## 자료 확인(너무 길면 head(n=) 함수 사용)
R > literacy.data
   V1 V2 V3 V4 V5 V6 V7 V8 V9 V10 V11 V12 V13 V14 V15 V16 V17 V18 V19 V20 V21 V22 V23 V24 V25
1   4  3  3  3  1  2  1  4  2   2   4   3   1   2   2   1   2   3   4   4   1   4   1   3   2
2   4  3  4  3  1  2  1  4  2   2   4   3   1   2   3   1   2   3   4   4   1   2   1   3   2
3   4  3  1  3  4  2  1  4  2   3   4   3   1   2   3   1   2   3   4   4   1   2   1   3   2
4   4  3  4  3  1  2  1  4  2   2   4   2   1   2   3   1   2   2   4   4   1   2   1   3   2
5   4  3  1  3  1  2  1  4  2   3   4   3   1   2   1   1   2   3   4   4   1   2   1   3   2
6   4  3  3  3  1  2  1  4  2   2   4   1   1   2   3   2   2   2   4   4   1   2   1   3   2
7   3  4  3  3  2  1  1  4  1   2   1   4   2   4   3   1   1   2   1   3   3   1   1   3   2
8   3  4  4  3  1  2  2  1  1   1   1   3   4   2   4   3   4   3   1   2   1   1   1   2   1
9   3  4  1  3  2  2  1  4  3   2   1   2   2   4   3   1   4   2   1   3   2   2   1   3   2
10  3  4  1  3  2  4  1  4  2   3   1   3   2   4   3   1   4   2   1   3   2   4   1   3   2
11  3  4  1  3  2  4  1  4  2   3   1   3   2   4   3   1   4   2   1   3   2   4   1   3   2
12  3  4  1  3  3  4  1  4  3   2   1   3   2   4   3   1   4   2   1   3   2   4   1   3   2
13  3  4  1  3  2  4  1  4  3   2   1   3   2   4   3   1   4   2   1   3   2   2   1   3   2
14  3  4  1  3  2  4  1  4  2   2   1   3   2   4   3   1   1   2   1   3   2   2   4   3   2
15  3  4  1  3  2  4  1  4  3   2   1   3   2   4   3   1   4   2   1   3   2   1   1   3   2
16  3  4  2  3  2  4  1  1  3   2   1   3   2   4   3   1   4   2   1   3   2   1   1   3   2
17  3  4  1  3  2  4  1  4  2   2   1   3   2   4   3   1   4   2   1   3   2   4   2   3   2
18  3  4  4  3  3  3  1  4  1   2   1   2   2   4   3   1   4   2   1   3   2   1   1   3   2
19  3  4  1  3  2  2  1  4  2   2   1   2   2   4   3   1   4   2   1   3   1   2   1   3   2
20  3  4  1  3  2  1  1  4  3   2   1   2   2   4   3   1   4   2   1   3   2   4   1   3   2
21  3  4  1  3  2  4  1  4  3   2   1   3   2   4   3   1   4   2   1   3   2   2   1   3   2
22  3  4  1  3  2  4  1  4  3   2   1   2   2   4   3   1   4   2   1   3   2   3   1   3   3
23  3  4  2  3  2  3  1  4  3   2   1   3   2   4   3   1   4   2   1   3   2   2   1   3   2
24  3  4  1  3  2  4  1  4  3   2   1   3   2   4   3   1   4   2   1   3   2   3   1   3   2
25  3  4  1  3  2  4  1  4  2   3   1   2   2   4   3   1   4   2   1   3   2   4   1   3   2
26  3  4  4  3  2  4  1  4  2   2   1   3   2   4   3   1   4   2   1   3   4   4   1   3   2
27  3  4  1  3  3  4  1  4  3   2   1   2   2   4   3   1   4   2   1   3   2   2   1   3   2
28  3  4  1  3  2  3  1  4  3   2   1   2   2   4   3   1   4   2   1   3   2   4   1   3   2
29  3  4  1  3  2  3  1  4  2   2   1   2   2   4   3   1   4   2   1   3   2   4   1   3   2
30  3  4  1  3  3  3  1  4  1   2   1   2   2   4   3   1   4   2   1   3   2   1   1   3   3
31  3  4  1  3  2  3  1  4  3   2   1   2   2   4   3   1   4   2   1   3   2   4   1   3   2
32  3  4  1  3  2  3  1  4  3   2   1   3   2   4   2   2   2   2   1   3   2   2   1   3   2
33  3  4  1  3  2  3  1  4  2   2   1   2   2   4   3   1   4   2   1   3   2   1   1   3   2
34  3  4  1  3  2  4  1  4  2   2   1   3   2   4   2   1   4   2   1   3   2   4   1   3   2
35  3  4  3  3  2  4  1  2  1   2   1   2   2   3   3   4   1   2   4   3   3   4   1   3   4
36 NA  4  1  3  2  4  1  4  3   2   1   3   2   4   3   1   4   2   1   3   2   1   1   3   2
37  3  4  1  3  2  4  1  4  2   2   1   2   2   4   3   1   2   2   1   3   4   1   1   3   2
38  3  4  1  3  2  4  1  4  2   2   1   3   2   4   3   1   1   2   1   3   2   3   1   3   2
39  3  4  1  3  2  2  1  4  2   2   1   3   2   4   3   1   4   2   1   3   2   4   1   3   2
40  3  4  1  3  2  4  1  4  3   2   1   3   2   4   3   3   4   2   1   3   2   2   1   3   2
41  3  4  1  3  2  3  1  4  2   3   1   3   2   4   3   1   4   2   1   3   2   4   1   3   2
42  3  3  1  3  2  3  1  4  2   2   1   3   2   4   4   1   4   2   1   3   2   4   1   3   2
43  3  4  1  3  2  4  1  4  3   2   1   2   2   4   3   1   1   2   1   3   2   4   1   3   2
44  3  4  1  3  2  2  1  4  3   2   1   2   2   4   4   1   4   2   1   3   2   4   1   3   2
45  3  4  4  3  2  3  1  4  1   2   1   3   2   4   3   1   1   2   1   3   2   4   1   3   2
46  3  4  1  3  2  4  1  4  2   2   1   2   2   4   4   1   4   2   1   3   2   1   1   3   2
47  3  4  1  3  2  4  1  4  2   3   1   3   2   4   3   1   4   2   1   3   4   4   1   3   2
48  3  4  4  3  2  3  1  1  1   2   1   2   2   4   3   1   4   1   1   1   1   4   1   1   2
49  3  4  1  3  2  4  1  1  3   2   1   2   2   4   3   1   4   2   1   3   2   4   1   3   2
50  3  4  1  3  2  1  1  1  3   2   1   3   2   4   3   1   4   2   1   3   2   4   1   3   2
51  3  4  1  3  2  4  1  4  3   2   1   3   2   4   3   1   4   2   1   3   2   4   1   3   2
52  3  4  1  3  2  1  1  4  2   2   1   3   2   4   3   1   4   2   1   2   2   4   1   3   2
53  3  4  1  3  2  2  1  4  2   2   1   2   2   4   3   1   1   2   1   3   2   4   1   3   2
54  3  4  1  3  2  2  1  4  2   2   1   3   2   4   3   1   1   2   1   3   2   4   2  NA  NA
55  3  4  1  3  2  4  1  4  2   2   1   3   2   4   3   1   4   2   1   3   2   4   2  NA  NA
56  3  4  4  3  2  4  1  4  2   2   1   3   2   4   3   1   4   2   1   3   4   4   1   3   2
57  3  4  1  3  2  4  1  4  3   2   1   2   2   4   3   1   4   2   1   3   2   2   1   3   2
58  3  4  1  3  2  4  1  4  1   2   1   2   2   4   3   1   4   2   1   3   2   2   1   3   2
59  3  4  1  3  2  3  1  4  2   2   1   3   2   4   3   1   1   2   1   3   2   4   1   3   2
60  3  4  1  3  2  4  1  4  2   2   1   3   2   4   3   1   4   2   1   3   2   4   1   3   2
61  3  4  1  3  2  3  1  2  2   2   1   2   2   4   3   4   1   2   1   2   2   1   1   3   3
62  3  3  1  3  2  4  1  4  3   2   1   2   2   4   3   1   1   2   1   3   2   2   1   3   2
63  3  4  1  3  2  4  1  4  3   2   1   2   2   4   3   1   4   2   1   3   2   4   1   3   2
64  3  4  1  3  2  4  1  4  3   2   1   3   2   4   3   1   4   2   1   3   2   4   1   3   2
65  3  4  1  3  2  3  1  4  2   2   1   3   2   4   3   1   4   2   1   3   2   4   1   3   2
66  3  4  1  3  2  4  1  4  3   3   1   2   2   4   3   1   4   2   1   3   2   2   1   3   2
67  3  4  1  3  2  4  1  4  3   2   1   3   2   4   3   1   1   2   1   3   2   2   1   3   2
68  3  4  1  3  2  3  1  4  3   2   1   3   2   4   3   1   4   2   1   3   2   4   2   3   2
69  3  4  1  3  2  4  1  4  2   2   1   3   2   4   2   1   4   2   1   3   2   2   1   3   2
70  3  4  1  3  2  4  1  4  3   2   1   3   2   4   3   1   1   2   1   3   2   2   1   3   2
71  3  4  1  3  3  4  1  4  3   2   1   2   2   4   3   1   4   2   1   3   2   2   1   3   2

## 문항 번호 입력
R > dimnames(literacy.data)[[2]]<-1:25

##
R > head(literacy.data,n=10)
   1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25
1  4 3 3 3 1 2 1 4 2  2  4  3  1  2  2  1  2  3  4  4  1  4  1  3  2
2  4 3 4 3 1 2 1 4 2  2  4  3  1  2  3  1  2  3  4  4  1  2  1  3  2
3  4 3 1 3 4 2 1 4 2  3  4  3  1  2  3  1  2  3  4  4  1  2  1  3  2
4  4 3 4 3 1 2 1 4 2  2  4  2  1  2  3  1  2  2  4  4  1  2  1  3  2
5  4 3 1 3 1 2 1 4 2  3  4  3  1  2  1  1  2  3  4  4  1  2  1  3  2
6  4 3 3 3 1 2 1 4 2  2  4  1  1  2  3  2  2  2  4  4  1  2  1  3  2
7  3 4 3 3 2 1 1 4 1  2  1  4  2  4  3  1  1  2  1  3  3  1  1  3  2
8  3 4 4 3 1 2 2 1 1  1  1  3  4  2  4  3  4  3  1  2  1  1  1  2  1
9  3 4 1 3 2 2 1 4 3  2  1  2  2  4  3  1  4  2  1  3  2  2  1  3  2
10 3 4 1 3 2 4 1 4 2  3  1  3  2  4  3  1  4  2  1  3  2  4  1  3  2

## literacy.data의 구조 파악. data.frame 이고, 문항 번호는 글자, 답안 번호들이 정수로 인식되어 있음을 확인.
R > str(literacy.data)
'data.frame':	71 obs. of  25 variables:
 $ 1 : int  4 4 4 4 4 4 3 3 3 3 ...
 $ 2 : int  3 3 3 3 3 3 4 4 4 4 ...
 $ 3 : int  3 4 1 4 1 3 3 4 1 1 ...
 $ 4 : int  3 3 3 3 3 3 3 3 3 3 ...
 $ 5 : int  1 1 4 1 1 1 2 1 2 2 ...
 $ 6 : int  2 2 2 2 2 2 1 2 2 4 ...
 $ 7 : int  1 1 1 1 1 1 1 2 1 1 ...
 $ 8 : int  4 4 4 4 4 4 4 1 4 4 ...
 $ 9 : int  2 2 2 2 2 2 1 1 3 2 ...
 $ 10: int  2 2 3 2 3 2 2 1 2 3 ...
 $ 11: int  4 4 4 4 4 4 1 1 1 1 ...
 $ 12: int  3 3 3 2 3 1 4 3 2 3 ...
 $ 13: int  1 1 1 1 1 1 2 4 2 2 ...
 $ 14: int  2 2 2 2 2 2 4 2 4 4 ...
 $ 15: int  2 3 3 3 1 3 3 4 3 3 ...
 $ 16: int  1 1 1 1 1 2 1 3 1 1 ...
 $ 17: int  2 2 2 2 2 2 1 4 4 4 ...
 $ 18: int  3 3 3 2 3 2 2 3 2 2 ...
 $ 19: int  4 4 4 4 4 4 1 1 1 1 ...
 $ 20: int  4 4 4 4 4 4 3 2 3 3 ...
 $ 21: int  1 1 1 1 1 1 3 1 2 2 ...
 $ 22: int  4 2 2 2 2 2 1 1 2 4 ...
 $ 23: int  1 1 1 1 1 1 1 1 1 1 ...
 $ 24: int  3 3 3 3 3 3 3 2 3 3 ...
 $ 25: int  2 2 2 2 2 2 2 1 2 2 ...
 
## 정답 맞추기. data.frame 구조로부터 정답 벡터와 맞춰 보려면 행렬의 행과 열을 바꾸는(transpose)하듯이 t()함수가 필요함에 유의. 1번 학생부터 8번 학생까지 유난히 틀린 답이 많아 약간의 고의성 의심.  
R > t(literacy.data)==literacy.ans
       1     2     3     4     5     6     7     8     9    10    11    12    13    14    15    16    17    18    19    20    21    22    23    24    25    26    27    28    29    30
1  FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
2  FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
3  FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE
4   TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
5  FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE
6  FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE
7   TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
8   TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
9  FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE
10  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE
11 FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
12  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE
13 FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
14 FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
15 FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
16  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
17 FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
18 FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
19 FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
20 FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
21 FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE
22  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE  TRUE  TRUE FALSE
23  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
24  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
25  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
      31    32    33    34    35    36    37    38    39    40    41    42    43    44    45    46    47    48    49    50   51    52    53    54    55    56    57    58    59    60
1   TRUE  TRUE  TRUE  TRUE  TRUE    NA  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
2   TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
3   TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE
4   TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
5   TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
6  FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE FALSE FALSE  TRUE  TRUE FALSE  TRUE FALSE TRUE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE
7   TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
8   TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE FALSE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
9   TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE  TRUE  TRUE TRUE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE
10  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
11  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
12 FALSE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE FALSE  TRUE FALSE FALSE  TRUE TRUE  TRUE FALSE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE
13  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
14  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
15  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
16  TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
17  TRUE FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE
18  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
19  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
20  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
21  TRUE  TRUE  TRUE  TRUE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE
22  TRUE FALSE FALSE  TRUE  TRUE FALSE FALSE FALSE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE
23  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE TRUE  TRUE  TRUE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE
24  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE TRUE  TRUE  TRUE    NA    NA  TRUE  TRUE  TRUE  TRUE  TRUE
25  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE TRUE  TRUE  TRUE    NA    NA  TRUE  TRUE  TRUE  TRUE  TRUE
      61    62    63   64    65    66    67    68    69    70    71
1   TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
2   TRUE FALSE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
3   TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
4   TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
5   TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE FALSE
6  FALSE  TRUE  TRUE TRUE FALSE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE
7   TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
8  FALSE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
9  FALSE  TRUE  TRUE TRUE FALSE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE
10  TRUE  TRUE  TRUE TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE
11  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
12 FALSE FALSE FALSE TRUE  TRUE FALSE  TRUE  TRUE  TRUE  TRUE FALSE
13  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
14  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
15  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE
16 FALSE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
17 FALSE FALSE  TRUE TRUE  TRUE  TRUE FALSE  TRUE  TRUE FALSE  TRUE
18  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
19  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
20 FALSE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
21  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
22 FALSE FALSE  TRUE TRUE  TRUE FALSE FALSE  TRUE FALSE FALSE FALSE
23  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE FALSE  TRUE  TRUE  TRUE
24  TRUE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
25 FALSE  TRUE  TRUE TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE

## 참여 학생들의 점수 계산. TRUE=1, FALSE는 0 으로 계산. 100점 만점으로 환산하기 위하여 4를 곱해 줌.
R > apply(t(literacy.data)==literacy.ans,2,sum,na.rm=TRUE)*4
  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46 
 40  40  40  40  36  36  72  32  88  92  92  96  96  84  96  88  92  76  80  92  96  88  88  96  88  88  88  92  88  76  92  80  84  92  60  92  80  88  92  92  88  84  92  88  84  84 
 47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71 
 88  64  92  92 100  88  84  76  84  88  92  88  88  96  64  84  96 100  92  88  92  92  88  92  88 

## 각 학생들의 점수를 literacy.score 에 저장 
R > literacy.score<-apply(t(literacy.data)==literacy.ans,2,sum,na.rm=TRUE)*4

## cut()함수에 breaks 와 labels 를 이용하여 문해력 등급 작성 
R > cut(literacy.score,breaks=c(0,24,48,72,100),labels=c("0-24","28-48","52-72","76-100"))
 [1] 28-48  28-48  28-48  28-48  28-48  28-48  52-72  28-48  76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100
[27] 76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 52-72  76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 52-72  76-100 76-100 76-100 76-100
[53] 76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 52-72  76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100 76-100
Levels: 0-24 28-48 52-72 76-100

## table()함수를 이용하여 문해력 점수 분포표 작성
R > table(cut(literacy.score,breaks=c(0,24,48,72,100),labels=c("0-24","28-48","52-72","76-100")))

  0-24  28-48  52-72 76-100 
     0      7      4     60 

## 각 학생의 점수를 등급으로 분류(1~4등급)
R > literacy.level<-cut(literacy.score,breaks=c(0,24,48,72,100),labels=c("1","2","3","4")) 

## 각 학생별로 문해력 등급 파악 
R > literacy.level
 [1] 2 2 2 2 2 2 3 2 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 3 4 4 4 4 4 4 4 4 4 4 4 4 3 4 4 4 4 4 4 4 4 4 4 4 4 3 4 4 4 4 4 4 4 4 4 4
Levels: 1 2 3 4

## 문해력 등급 분포표 작성
R > table(literacy.level)
literacy.level
 1  2  3  4 
 0  7  4 60 
R > 

## 문해력 점수의 기초통계 확인
R > summary(literacy.score)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
  32.00   84.00   88.00   82.59   92.00  100.00 

## 문해력 점수의 줄기-잎 그림
R > stem(literacy.score)

  The decimal point is 1 digit(s) to the right of the |

   3 | 266
   4 | 0000
   5 | 
   6 | 044
   7 | 2666
   8 | 000444444448888888888888888888
   9 | 2222222222222222226666666
  10 | 00

## aggregate() 함수를 이용하여 사실적 이해, 추론적 이해, 비판적 이해 각 영역의 점수 파악. literacy.type 이 character 인 것을 list 로 바꿔야 작업이 이루어짐에 유의. aggregate() 함수의 계산 결과는 data.frame class 인데
## 첫 열이 Group.1 이름 밑에 list(literacy.type)에 해당하는 a, b, c 로 구성됨.
R > aggregate(t(literacy.data)==literacy.ans,list(literacy.type),sum,na.rm=TRUE)
  Group.1 1 2 3 4 5 6  7 8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
1       a 5 6 6 5 5 4 11 6 12 13 13 13 13 13 13 12 13 12 11 12 13 12 13 13 12 12 12 12 12 12 12 11 12 12  8 12 11 13 13 12 13 11 12 11 13 11 12  8 11 12 13 12 12 12 12 12 12 12 13 13  9
2       b 4 4 3 4 3 4  6 2  8  7  7  8  9  6  9  9  7  6  7  8  9  8  8  9  7  8  8  8  7  5  8  7  7  8  5  9  7  7  7  9  6  7  8  8  6  8  7  7  9  8  9  7  6  4  6  8  9  8  6  8  5
3       c 1 0 1 1 1 1  1 0  2  3  3  3  2  2  2  1  3  1  2  3  2  2  1  2  3  2  2  3  3  2  3  2  2  3  2  2  2  2  3  2  3  3  3  3  2  2  3  1  3  3  3  3  3  3  3  2  2  2  3  3  2
  62 63 64 65 66 67 68 69 70 71
1 11 12 13 13 12 13 13 12 13 12
2  8  9  9  7  8  8  7  8  8  8
3  2  3  3  3  2  2  3  2  2  2

## aggregate() 계산 결과를 literacy.results 에 저장
R > literacy.results<-aggregate(t(literacy.data)==literacy.ans,list(literacy.type),sum,na.rm=TRUE)

## literacy.results 의 첫번째 열을 뺀 영역별 점수표를 literacy.results 에 저장
R > literacy.results<-literacy.results[,-1]

## 100점 만점으로 환산하기 4점을 곱함.
R > literacy.results*4.0
   1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
1 20 24 24 20 20 16 44 24 48 52 52 52 52 52 52 48 52 48 44 48 52 48 52 52 48 48 48 48 48 48 48 44 48 48 32 48 44 52 52 48 52 44 48 44 52 44 48 32 44 48 52 48 48 48 48 48 48 48 52 52 36
2 16 16 12 16 12 16 24  8 32 28 28 32 36 24 36 36 28 24 28 32 36 32 32 36 28 32 32 32 28 20 32 28 28 32 20 36 28 28 28 36 24 28 32 32 24 32 28 28 36 32 36 28 24 16 24 32 36 32 24 32 20
3  4  0  4  4  4  4  4  0  8 12 12 12  8  8  8  4 12  4  8 12  8  8  4  8 12  8  8 12 12  8 12  8  8 12  8  8  8  8 12  8 12 12 12 12  8  8 12  4 12 12 12 12 12 12 12  8  8  8 12 12  8
  62 63 64 65 66 67 68 69 70 71
1 44 48 52 52 48 52 52 48 52 48
2 32 36 36 28 32 32 28 32 32 32
3  8 12 12 12  8  8 12  8  8  8


## 점수표를 학생 별로 파악하기 쉽도록 transpose 한 후 literacy.by.type 로 저장 
R > literacy.by.type<-t(literacy.results*4.0)

## 각 영역별 명칭을 dimnames 로 저장
R > dimnames(literacy.by.type)[[2]]<-c("factual","inferential","critical")

## 학생별 영역별 점수표 출력
R > literacy.by.type
   factual inferential critical
1       20          16        4
2       24          16        0
3       24          12        4
4       20          16        4
5       20          12        4
6       16          16        4
7       44          24        4
8       24           8        0
9       48          32        8
10      52          28       12
11      52          28       12
12      52          32       12
13      52          36        8
14      52          24        8
15      52          36        8
16      48          36        4
17      52          28       12
18      48          24        4
19      44          28        8
20      48          32       12
21      52          36        8
22      48          32        8
23      52          32        4
24      52          36        8
25      48          28       12
26      48          32        8
27      48          32        8
28      48          32       12
29      48          28       12
30      48          20        8
31      48          32       12
32      44          28        8
33      48          28        8
34      48          32       12
35      32          20        8
36      48          36        8
37      44          28        8
38      52          28        8
39      52          28       12
40      48          36        8
41      52          24       12
42      44          28       12
43      48          32       12
44      44          32       12
45      52          24        8
46      44          32        8
47      48          28       12
48      32          28        4
49      44          36       12
50      48          32       12
51      52          36       12
52      48          28       12
53      48          24       12
54      48          16       12
55      48          24       12
56      48          32        8
57      48          36        8
58      48          32        8
59      52          24       12
60      52          32       12
61      36          20        8
62      44          32        8
63      48          36       12
64      52          36       12
65      52          28       12
66      48          32        8
67      52          32        8
68      52          28       12
69      48          32        8
70      52          32        8
71      48          32        8

## 각 학생의 영역별 점수와 합계, 그리고 등급을 literacy.overall 로 저장하여 출력
R > literacy.overall<-cbind(literacy.by.type,literacy.score,literacy.level)
R > literacy.overall
   factual inferential critical literacy.score literacy.level
1       20          16        4             40              2
2       24          16        0             40              2
3       24          12        4             40              2
4       20          16        4             40              2
5       20          12        4             36              2
6       16          16        4             36              2
7       44          24        4             72              3
8       24           8        0             32              2
9       48          32        8             88              4
10      52          28       12             92              4
11      52          28       12             92              4
12      52          32       12             96              4
13      52          36        8             96              4
14      52          24        8             84              4
15      52          36        8             96              4
16      48          36        4             88              4
17      52          28       12             92              4
18      48          24        4             76              4
19      44          28        8             80              4
20      48          32       12             92              4
21      52          36        8             96              4
22      48          32        8             88              4
23      52          32        4             88              4
24      52          36        8             96              4
25      48          28       12             88              4
26      48          32        8             88              4
27      48          32        8             88              4
28      48          32       12             92              4
29      48          28       12             88              4
30      48          20        8             76              4
31      48          32       12             92              4
32      44          28        8             80              4
33      48          28        8             84              4
34      48          32       12             92              4
35      32          20        8             60              3
36      48          36        8             92              4
37      44          28        8             80              4
38      52          28        8             88              4
39      52          28       12             92              4
40      48          36        8             92              4
41      52          24       12             88              4
42      44          28       12             84              4
43      48          32       12             92              4
44      44          32       12             88              4
45      52          24        8             84              4
46      44          32        8             84              4
47      48          28       12             88              4
48      32          28        4             64              3
49      44          36       12             92              4
50      48          32       12             92              4
51      52          36       12            100              4
52      48          28       12             88              4
53      48          24       12             84              4
54      48          16       12             76              4
55      48          24       12             84              4
56      48          32        8             88              4
57      48          36        8             92              4
58      48          32        8             88              4
59      52          24       12             88              4
60      52          32       12             96              4
61      36          20        8             64              3
62      44          32        8             84              4
63      48          36       12             96              4
64      52          36       12            100              4
65      52          28       12             92              4
66      48          32        8             88              4
67      52          32        8             92              4
68      52          28       12             92              4
69      48          32        8             88              4
70      52          32        8             92              4
71      48          32        8             88              4
R > 

## 문항별 정답률 계산
R > round(apply(t(literacy.data)==literacy.ans,1,sum,na.rm=TRUE)/71*100,digits=1)
    1     2     3     4     5     6     7     8     9    10    11    12    13    14    15    16    17    18    19    20    21    22    23    24    25 
 90.1  88.7  80.3 100.0  83.1  53.5  98.6  90.1  42.3  87.3  91.5  57.7  90.1  88.7  87.3  91.5  70.4  91.5  90.1  85.9  78.9  49.3  93.0  94.4  90.1 

## 2010년 자료와 비교
R > round(apply(literacy.comp.2010,1,sum,na.rm=TRUE)/68*100,digits=1)
    1     2     3     4     5     6     7     8     9    10    11    12    13    14    15    16    17    18    19    20    21    22    23    24    25 
100.0  89.7  86.8  97.1  94.1  72.1  91.2  88.2  44.1  92.6  97.1  55.9  95.6  92.6  77.9  91.2  75.0  92.6  95.6  86.8  80.9  52.9  83.8  85.3  63.2 
R > 

## 비교를 쉽게 하기 위하여 1-column 매트릭스로 변환
R > literacy.rate.by.item<-matrix(round(apply(t(literacy.data)==literacy.ans,1,sum,na.rm=TRUE)/71*100,digits=1),ncol=1)

## 행렬의 이름 설정
R > dimnames(literacy.rate.by.item)[[1]]<-1:25
R > dimnames(literacy.rate.by.item)[[2]]<-"2014.2"

## 비교용 문항별 정답률 출력
R > literacy.rate.by.item
   2014.2
1    90.1
2    88.7
3    80.3
4   100.0
5    83.1
6    53.5
7    98.6
8    90.1
9    42.3
10   87.3
11   91.5
12   57.7
13   90.1
14   88.7
15   87.3
16   91.5
17   70.4
18   91.5
19   90.1
20   85.9
21   78.9
22   49.3
23   93.0
24   94.4
25   90.1
R > 

## 2010년 문항별 정답률 출력
R > literacy.rate.by.item.2010
    2010
1  100.0
2   89.7
3   86.8
4   97.1
5   94.1
6   72.1
7   91.2
8   88.2
9   44.1
10  92.6
11  97.1
12  55.9
13  95.6
14  92.6
15  77.9
16  91.2
17  75.0
18  92.6
19  95.6
20  86.8
21  80.9
22  52.9
23  83.8
24  85.3
25  63.2
R >  